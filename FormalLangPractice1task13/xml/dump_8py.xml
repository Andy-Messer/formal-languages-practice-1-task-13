<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="dump_8py" kind="file" language="Python">
    <compoundname>dump.py</compoundname>
    <innernamespace refid="namespaceFormalLangPractice1task13_1_1dump">FormalLangPractice1task13::dump</innernamespace>
    <briefdescription>
<para>auxiliary module for uploading information about NFA </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="index_1description_main">
<title>Description</title>
<para>Collects a textual description of the state of the automaton in &apos;/logs&apos; and takes snapshots of the state of the machine, puts them to &apos;/snapshots&apos;</para>
</sect1>
<sect1 id="nfa_8py_1libraries_main">
<title>Libraries/Modules</title>
<para><itemizedlist>
<listitem><para>graphviz - module for visualisation</para>
</listitem><listitem><para>os - module for communication with the system </para>
</listitem></itemizedlist>
</para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceFormalLangPractice1task13_1_1dump" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@section<sp/>author<sp/>Author(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>Created<sp/>by<sp/>Andrey<sp/>Krotov<sp/>on<sp/>17/10/2021</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>Modified<sp/>by<sp/>Andrey<sp/>Krotov<sp/>on<sp/>18/10/2021</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Andrey<sp/>Krotov.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>graphviz</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>inspect</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os.path</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">dot<sp/>=<sp/>graphviz.Digraph(format=</highlight><highlight class="stringliteral">&apos;png&apos;</highlight><highlight class="normal">,<sp/>comment=</highlight><highlight class="stringliteral">&apos;dump<sp/>of<sp/>NFA&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">dump_file<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">states<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceFormalLangPractice1task13_1_1dump_1a590bbd4db11eab36b8ad441dfb6feb3c" kindref="member">make_new_state</ref>(num):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>states:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>states[num]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;q&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(len(states))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>states[num]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceFormalLangPractice1task13_1_1dump_1a5d8bf0ad59557c62aabb22f21ef39017" kindref="member">__print_brief__</ref>(node):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;\t\t\tNode<sp/>id:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespaceFormalLangPractice1task13_1_1dump_1a590bbd4db11eab36b8ad441dfb6feb3c" kindref="member">make_new_state</ref>(node)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>is<sp/>final:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(node.final)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceFormalLangPractice1task13_1_1dump_1afb8c29eac02bfcda391bbb3f4b60c251" kindref="member">get_transitions_size</ref>(node):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nodes<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>node.transitions:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>+=<sp/>len(node.transitions[nodes])</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceFormalLangPractice1task13_1_1dump_1a129f222ba493ae164ae721f5974d7d31" kindref="member">__print_node__</ref>(node):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;Node<sp/>id:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespaceFormalLangPractice1task13_1_1dump_1a590bbd4db11eab36b8ad441dfb6feb3c" kindref="member">make_new_state</ref>(node)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>is<sp/>final:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(node.final)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;,<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;Count<sp/>of<sp/>transitions:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(<ref refid="namespaceFormalLangPractice1task13_1_1dump_1afb8c29eac02bfcda391bbb3f4b60c251" kindref="member">get_transitions_size</ref>(node))<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespaceFormalLangPractice1task13_1_1dump_1afb8c29eac02bfcda391bbb3f4b60c251" kindref="member">get_transitions_size</ref>(node)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>node.transitions:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_node_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>node.transitions[key]:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;\t\tby:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(key)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to:<sp/>\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dot.node(str(id(node)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dot.node(str(id(_node_)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dot.edge(<ref refid="namespaceFormalLangPractice1task13_1_1dump_1a590bbd4db11eab36b8ad441dfb6feb3c" kindref="member">make_new_state</ref>(node),<sp/><ref refid="namespaceFormalLangPractice1task13_1_1dump_1a590bbd4db11eab36b8ad441dfb6feb3c" kindref="member">make_new_state</ref>(_node_),<sp/>label=key)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceFormalLangPractice1task13_1_1dump_1a5d8bf0ad59557c62aabb22f21ef39017" kindref="member">__print_brief__</ref>(_node_)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;\t\tIt&apos;s<sp/>all<sp/>transitions...\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceFormalLangPractice1task13_1_1dump_1ac7997ed8b833e1fbd2d7631c70cb9032" kindref="member">__print__</ref>(nfa):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;||******************************************************************************||\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.write(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tNFA<sp/>id:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(id(nfa))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>initial:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespaceFormalLangPractice1task13_1_1dump_1a590bbd4db11eab36b8ad441dfb6feb3c" kindref="member">make_new_state</ref>(nfa.initial)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>final:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespaceFormalLangPractice1task13_1_1dump_1a590bbd4db11eab36b8ad441dfb6feb3c" kindref="member">make_new_state</ref>(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfa.final)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;\tCount<sp/>of<sp/>Nodes:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(nfa.nodes))<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>node<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nfa.nodes:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>node<sp/>==<sp/>nfa.initial:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dot.node(<ref refid="namespaceFormalLangPractice1task13_1_1dump_1a590bbd4db11eab36b8ad441dfb6feb3c" kindref="member">make_new_state</ref>(node),<sp/>style=</highlight><highlight class="stringliteral">&apos;filled&apos;</highlight><highlight class="normal">,<sp/>color=</highlight><highlight class="stringliteral">&apos;lightgrey&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>node<sp/>==<sp/>nfa.final:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dot.node(<ref refid="namespaceFormalLangPractice1task13_1_1dump_1a590bbd4db11eab36b8ad441dfb6feb3c" kindref="member">make_new_state</ref>(node),<sp/>shape=</highlight><highlight class="stringliteral">&apos;doublecircle&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;\n\tDumping<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceFormalLangPractice1task13_1_1dump_1a129f222ba493ae164ae721f5974d7d31" kindref="member">__print_node__</ref>(node)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;||******************************************************************************||\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_tree_remove(top:<sp/>str):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>Removes<sp/>all<sp/>files<sp/>in<sp/>the<sp/>current<sp/>directory.</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>@param<sp/>top<sp/>Name<sp/>of<sp/>initial<sp/>directory.</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>root,<sp/>dirs,<sp/>files<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.walk(top,<sp/>topdown=</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.remove(os.path.join(root,<sp/>name))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dirs:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.rmdir(os.path.join(root,<sp/>name))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceFormalLangPractice1task13_1_1dump_1acc1a8e78078dde929a37b6d6535c5563" kindref="member">__dump_stack__</ref>(nfa,<sp/>filename):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>dump_file</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(</highlight><highlight class="stringliteral">&apos;./logs&apos;</highlight><highlight class="normal"><sp/>+<sp/>filename):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_tree_remove(</highlight><highlight class="stringliteral">&apos;./logs&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isdir(</highlight><highlight class="stringliteral">&apos;./logs&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.mkdir(</highlight><highlight class="stringliteral">&apos;./logs&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(</highlight><highlight class="stringliteral">&apos;./logs&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file<sp/>=<sp/>open(filename,<sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;Dumping<sp/>started...\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.write(</highlight><highlight class="stringliteral">&quot;Dumping<sp/>NFA...\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceFormalLangPractice1task13_1_1dump_1ac7997ed8b833e1fbd2d7631c70cb9032" kindref="member">__print__</ref>(nfa)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(</highlight><highlight class="stringliteral">&apos;..&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isdir(</highlight><highlight class="stringliteral">&apos;./snapshots/&apos;</highlight><highlight class="normal"><sp/>+<sp/>filename):</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_tree_remove(</highlight><highlight class="stringliteral">&apos;./snapshots&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isdir(</highlight><highlight class="stringliteral">&apos;./snapshots&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.mkdir(</highlight><highlight class="stringliteral">&apos;./snapshots&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(</highlight><highlight class="stringliteral">&apos;./snapshots&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isdir(</highlight><highlight class="stringliteral">&apos;./&apos;</highlight><highlight class="normal"><sp/>+<sp/>filename):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.mkdir(</highlight><highlight class="stringliteral">&apos;./&apos;</highlight><highlight class="normal"><sp/>+<sp/>filename)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_tree_remove(</highlight><highlight class="stringliteral">&apos;./&apos;</highlight><highlight class="normal"><sp/>+<sp/>filename)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.rmdir(</highlight><highlight class="stringliteral">&apos;./&apos;</highlight><highlight class="normal"><sp/>+<sp/>filename)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.mkdir(</highlight><highlight class="stringliteral">&apos;./&apos;</highlight><highlight class="normal"><sp/>+<sp/>filename)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(</highlight><highlight class="stringliteral">&apos;./&apos;</highlight><highlight class="normal"><sp/>+<sp/>filename)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>dot.render(</highlight><highlight class="stringliteral">&apos;./&apos;</highlight><highlight class="normal"><sp/>+<sp/>filename)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>dot.clear()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(</highlight><highlight class="stringliteral">&apos;..&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(</highlight><highlight class="stringliteral">&apos;..&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_file.close()</highlight></codeline>
    </programlisting>
    <location file="dump.py"/>
  </compounddef>
</doxygen>
