<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA" kind="class" language="Python" prot="public">
    <compoundname>FormalLangPractice1task13::nfa::_CreateNFA</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a46a85338742bf5c446ee7a462d658889" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>final</definition>
        <argsstring></argsstring>
        <name>final</name>
        <initializer>=  <ref refid="classFormalLangPractice1task13_1_1nfa_1_1__Node" kindref="compound">_Node</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="168" column="1" bodyfile="nfa.py" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a8d0dd69a20182cd1647f229af000cfa5" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>initial</definition>
        <argsstring></argsstring>
        <name>initial</name>
        <initializer>=  <ref refid="classFormalLangPractice1task13_1_1nfa_1_1__Node" kindref="compound">_Node</ref>()</initializer>
        <briefdescription>
<para>Section: Architecture of <ref refid="classFormalLangPractice1task13_1_1nfa_1_1NFA" kindref="compound">NFA</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The starting state of nondeterministicailed finite automaton </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="164" column="1" bodyfile="nfa.py" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a0b14e488ae28d98d262453f3e9cd6e4d" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>=  logging.getLogger(__name__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="175" column="1" bodyfile="nfa.py" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a1022bdba60126eb63ecd2f2c612fe07a" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>nfa</definition>
        <argsstring></argsstring>
        <name>nfa</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="172" column="1" bodyfile="nfa.py" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a7d3a7a8f8b193c3a91a80dac71dcb75c" prot="public" static="yes" mutable="no">
        <type>list</type>
        <definition>list nodes</definition>
        <argsstring></argsstring>
        <name>nodes</name>
        <initializer>=  []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="166" column="1" bodyfile="nfa.py" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1aa8ff6a66ecd9f102758d009c7bf3d32f" prot="public" static="yes" mutable="no">
        <type>list</type>
        <definition>list stack</definition>
        <argsstring></argsstring>
        <name>stack</name>
        <initializer>=  []</initializer>
        <briefdescription>
<para>Section: Working with stack, reverse polish notation processing. </para>
        </briefdescription>
        <detaileddescription>
<para>Stack for processing input </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="183" column="1" bodyfile="nfa.py" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a6da5270e48c8b5c2f0dbaa008af4df76" prot="public" static="no" mutable="no">
        <type></type>
        <definition>nodes</definition>
        <argsstring></argsstring>
        <name>nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="261" column="1" bodyfile="nfa.py" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a37d7c639a3adefa88200027e9f78ba3f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>stack</definition>
        <argsstring></argsstring>
        <name>stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="264" column="1" bodyfile="nfa.py" bodystart="264" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a62d114c8017936187a4b318c581e0bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def __init__</definition>
        <argsstring>(self, reg_exp=None)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>reg_exp</type>
          <defname>reg_exp</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="258" column="1" bodyfile="nfa.py" bodystart="258" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a5c3712c31bdf8318bd4b732d4e99014b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def reg_concatenation</definition>
        <argsstring>(self)</argsstring>
        <name>reg_concatenation</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Regex concatenation This method takes the last two elements in stack and concatenates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="185" column="1" bodyfile="nfa.py" bodystart="185" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a377c78827ef6e6c6bfa1e88c880b6882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def reg_iteration</definition>
        <argsstring>(self)</argsstring>
        <name>reg_iteration</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Regex iteration This method takes the last element and applies the Kleene star. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="209" column="1" bodyfile="nfa.py" bodystart="209" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a57eb512c08bd3207c3a41667f054dc65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def reg_or</definition>
        <argsstring>(self)</argsstring>
        <name>reg_or</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>boolean &apos;or&apos; for regular expressions This method takes the last two elements in stack and forks them into one block with the help of two additional states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nfa.py" line="222" column="1" bodyfile="nfa.py" bodystart="222" bodyend="257"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functor for creating <ref refid="classFormalLangPractice1task13_1_1nfa_1_1NFA" kindref="compound">NFA</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="nfa.py" line="157" column="1" bodyfile="nfa.py" bodystart="157" bodyend="292"/>
    <listofallmembers>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a62d114c8017936187a4b318c581e0bb3" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>__init__</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a46a85338742bf5c446ee7a462d658889" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>final</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a8d0dd69a20182cd1647f229af000cfa5" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>initial</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a0b14e488ae28d98d262453f3e9cd6e4d" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>logger</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a1022bdba60126eb63ecd2f2c612fe07a" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>nfa</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a7d3a7a8f8b193c3a91a80dac71dcb75c" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>nodes</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a6da5270e48c8b5c2f0dbaa008af4df76" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>nodes</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a5c3712c31bdf8318bd4b732d4e99014b" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>reg_concatenation</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a377c78827ef6e6c6bfa1e88c880b6882" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>reg_iteration</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a57eb512c08bd3207c3a41667f054dc65" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>reg_or</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1aa8ff6a66ecd9f102758d009c7bf3d32f" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>stack</name></member>
      <member refid="classFormalLangPractice1task13_1_1nfa_1_1__CreateNFA_1a37d7c639a3adefa88200027e9f78ba3f" prot="public" virt="non-virtual"><scope>FormalLangPractice1task13::nfa::_CreateNFA</scope><name>stack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
